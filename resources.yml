---
Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            MaxAge: 3000

  RedirectBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.cdn.domainName}
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: ${self:custom.cdn.endpoint}

  WebsiteBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: OAIGetObject
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                - ' '
                - - arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                  - Ref: WebsiteBucketOriginAccessIdentity
            Action:
              - s3:GetObject
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: WebsiteBucket
                - '/*'
          - Sid: OAIListBucket
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                - ' '
                - - arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                  - Ref: WebsiteBucketOriginAccessIdentity
            Action:
              - s3:ListBucket
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: WebsiteBucket

  WebsiteBucketOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Website ${opt:stage}-${self:service} (${opt:region})

  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Website ${opt:stage}-${self:service} (${opt:region})
        Origins:
          - Id: S3Origin
            DomainName:
              Fn::GetAtt: [WebsiteBucket, DomainName]
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                - ''
                - - origin-access-identity/cloudfront/
                  - Ref: WebsiteBucketOriginAccessIdentity
        Enabled: true
        Aliases: ${self:custom.cdn.aliases}
          # - ${self:custom.cdn.endpoint}
        PriceClass: ${self:custom.cdn.priceClass}
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 0
          ViewerProtocolPolicy: allow-all
        ViewerCertificate:
          AcmCertificateArn: ${self:custom.cdn.acmCertificateArn}
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Logging:
          IncludeCookies: true
          Bucket: ${self:custom.cdn.logging.bucketName} # ${self:custom.cdn.logging.bucket}.s3.amazonaws.com
          Prefix: ${self:custom.cdn.logging.prefix} # aws-cloudfront
        WebACLId: ${self:custom.cdn.webACLId}

  RedirectDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Redirect ${opt:stage}-${self:service} (${opt:region})
        Origins:
          - Id: S3Origin
            DomainName:
              Fn::Select:
                - 1
                - Fn::Split:
                  - '//'
                  - Fn::GetAtt: [ RedirectBucket, WebsiteURL ]
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: true
        Aliases:
          - ${self:custom.cdn.domainName}
        PriceClass: ${self:custom.cdn.priceClass}
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 31536000
          DefaultTTL: 31536000
          ViewerProtocolPolicy: allow-all
        ViewerCertificate:
          AcmCertificateArn: ${self:custom.cdn.acmCertificateArn}
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Logging:
          IncludeCookies: true
          Bucket: ${self:custom.cdn.logging.bucketName} # ${self:custom.cdn.logging.bucket}.s3.amazonaws.com
          Prefix: ${self:custom.cdn.logging.prefix} # aws-cloudfront
        WebACLId: ${self:custom.cdn.webACLId}

  WebsiteEndpointRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: ${self:custom.cdn.hostedZoneId}
      Name: ${self:custom.cdn.endpoint}.
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName:
          Fn::GetAtt:
            - WebsiteDistribution
            - DomainName

  RedirectEndpointRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: ${self:custom.cdn.hostedZoneId}
      Name: ${self:custom.cdn.domainName}.
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName:
          Fn::GetAtt:
            - RedirectDistribution
            - DomainName

Outputs:
  WebsiteBucketName:
    Value:
      Ref: WebsiteBucket
  WebsiteDistributionURL:
    Value:
      Fn::Join:
        - ''
        - - https://
          - Fn::GetAtt: [ WebsiteDistribution, DomainName ]
  WebsiteDistributionId:
    Value:
      Ref: WebsiteDistribution
  WebsiteURL:
    Value: https://${self:custom.cdn.endpoint}
